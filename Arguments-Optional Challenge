function addTogether(x) {
  
  let args = [...arguments];//array of arguments

// use nested swicth metode to run different scenario
  switch (args.length){
    case 1:
      switch (typeof args[0]){
        case "string":
          return undefined;
        case "number": 
 // here I use function that return function to tackle double set parentheses arguments, 
 // see more at "https://stackoverflow.com/questions/18234491/two-sets-of-parentheses-after-function-call"
       	  return function (y) { 
         	switch (typeof y){
           		case "object":
             		return undefined;
             		break;
           		case "number":
             		return x+y;
         					}
         				};
      		}
    case 2:
       if (typeof args[0] && typeof args[1] !== "number" ) {
       return undefined} else {return args[0] + args[1]
        }  
  }
  
} 
let sumTwoAnd = addTogether(2);
console.log(addTogether(2, 3));
console.log(sumTwoAnd(6))
